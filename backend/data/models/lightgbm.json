{
  "id": "lightgbm",
  "name": "LightGBM",
  "aliases": [],
  "category": "Ensemble",
  "tags": [
    "lightgbm",
    "boosting",
    "ensemble"
  ],
  "level": "beginner",
  "summary": "Gradient boosting with histogram-based splits and leaf-wise tree growth; fast and memory-efficient.",
  "app_scenarios": [
    "Large-scale tabular tasks",
    "Click-through rate prediction"
  ],
  "math": {
    "core_formula": "Same general boosting objective with gradient and hessian-based splits; uses histogram binning.",
    "derivation": [],
    "assumptions": [],
    "constraints": [],
    "variants": [
      "LightGBM GPU",
      "DART"
    ]
  },
  "hyperparameters": [
    {
      "name": "num_leaves",
      "type": "int",
      "default": 31,
      "tips": "Increase with caution to avoid overfit"
    },
    {
      "name": "min_data_in_leaf",
      "type": "int",
      "default": 20,
      "tips": "Raise for regularization"
    },
    {
      "name": "learning_rate",
      "type": "float",
      "default": 0.1,
      "tips": "Pair with early stopping"
    }
  ],
  "data_requirements": {
    "input": "Good binning parameters; Care with num_leaves/min_data_in_leaf",
    "scale_sensitivity": "",
    "missing_values": ""
  },
  "required_columns": [
    {"role":"feature_x","canonical":"x","aliases":["X"],"dtype":"number","description":"Feature"},
    {"role":"feature_y","canonical":"y","aliases":["Y"],"dtype":"number","description":"Feature"},
    {"role":"label","canonical":"label","aliases":["target"],"dtype":"number","description":"Class label"}
  ],
  "code": {
    "python_sklearn": "import pandas as pd\nimport lightgbm as lgb\n\ndf = pd.read_csv('data.csv')\nX = df[['x','y']]; y = df['label']\nmodel = lgb.LGBMClassifier().fit(X,y)\nprint('score=', model.score(X,y))\npd.DataFrame({'pred':model.predict(X)}).to_csv('result.csv', index=False)"
  },
  "usage": {
    "workflow": [
      "Prepare datasets with categorical encoding or built-in handling",
      "Use early_stopping in fit",
      "Tune num_leaves/min_data_in_leaf/feature_fraction"
    ],
    "examples": []
  },
  "evaluation": {
    "metrics": [
      "Accuracy/ROC-AUC",
      "Logloss",
      "RMSE/MAE"
    ],
    "validation": "Validation set with early stopping",
    "baselines": [
      "XGBoost",
      "GBDT"
    ]
  },
  "strengths": [
    "Fast training",
    "Low memory",
    "Good accuracy"
  ],
  "weaknesses": [
    "Leaf-wise can overfit",
    "Categorical handling differs"
  ],
  "pitfalls": [
    "Leaf-wise growth can overfit small datasets",
    "Inconsistent categorical handling compared to CatBoost"
  ],
  "comparisons": [
    {
      "with": "XGBoost",
      "differences": [
        "LightGBM faster on large sparse data; XGBoost sometimes more stable"
      ]
    }
  ],
  "visualizations": [
    "Feature importance",
    "SHAP values"
  ],
  "references": [
    {
      "title": "https://lightgbm.readthedocs.io/",
      "url": "https://lightgbm.readthedocs.io/",
      "type": "docs"
    }
  ],
  "related": [
    "lightgbm",
    "numpy",
    "pandas"
  ],
  "last_updated": "2025-08-24"
}