{
  "id": "topsis",
  "name": "TOPSIS",
  "aliases": [],
  "category": "Multi-criteria Decision Making",
  "tags": [
    "topsis",
    "mcdm",
    "ranking"
  ],
  "level": "beginner",
  "summary": "Ranks alternatives by closeness to the ideal and distance from the negative-ideal after normalization and weighting.",
  "app_scenarios": [
    "Supplier selection",
    "Project prioritization"
  ],
  "math": {
    "core_formula": "v_{ij} = w_j \\cdot \\frac{x_{ij}}{\\sqrt{\\sum_i x_{ij}^2}},\\; S_i^+ = \\sqrt{\\sum_j (v_{ij}-v_j^+)^2},\\; S_i^- = \\sqrt{\\sum_j (v_{ij}-v_j^-)^2},\\; C_i = \\frac{S_i^-}{S_i^+ + S_i^-}",
    "derivation": [],
    "assumptions": [],
    "constraints": [],
    "variants": [
      "Fuzzy TOPSIS",
      "Grey TOPSIS"
    ]
  },
  "hyperparameters": [],
  "data_requirements": {
    "input": "Monotonic criteria direction; Weights sum to 1",
    "scale_sensitivity": "",
    "missing_values": ""
  },
  "required_columns": [
    {
      "role": "criteria",
      "canonical": "criteria",
      "aliases": ["criterion"],
      "dtype": "string",
      "description": "Criteria name"
    },
    {
      "role": "value",
      "canonical": "value",
      "aliases": ["score"],
      "dtype": "number",
      "description": "Score for alternative under criteria"
    }
  ],
  "code": {
    "python_sklearn": "import pandas as pd\nimport numpy as np\n\n# Example TOPSIS procedure (simplified)\ndf = pd.read_csv('data.csv')\n# Assume columns: alternative, criteria, value\npivot = df.pivot_table(index='alternative', columns='criteria', values='value')\nX = pivot.values.astype(float)\n\n# Normalize\nnorm = X / np.sqrt((X**2).sum(axis=0))\n# Ideal best & worst\nbest = norm.max(axis=0)\nworst = norm.min(axis=0)\n# Distances\nd_pos = np.sqrt(((norm-best)**2).sum(axis=1))\nd_neg = np.sqrt(((norm-worst)**2).sum(axis=1))\nscores = d_neg/(d_pos+d_neg)\n\nresult = pd.DataFrame({'alternative':pivot.index,'score':scores})\nprint(result)\nresult.to_csv('result.csv', index=False)"
  },
  "usage": {
    "workflow": [
      "Normalize decision matrix",
      "Apply weights (sum to 1)",
      "Determine ideal and anti-ideal",
      "Compute distances and closeness C_i",
      "Rank alternatives"
    ],
    "examples": []
  },
  "evaluation": {
    "metrics": [
      "Stability analysis",
      "Rank correlation vs baseline"
    ],
    "validation": "Perturbation analysis on weights and scaling",
    "baselines": [
      "Equal-weight score",
      "AHP-derived weights"
    ]
  },
  "strengths": [
    "Simple and fast",
    "Considers both ideal and anti-ideal"
  ],
  "weaknesses": [
    "Weight subjectivity",
    "Sensitive to normalization"
  ],
  "pitfalls": [
    "Weight/scale subjectivity",
    "Criteria direction mis-specified (benefit vs cost)"
  ],
  "comparisons": [
    {
      "with": "AHP",
      "differences": [
        "AHP for weights; TOPSIS for ranking"
      ]
    }
  ],
  "visualizations": [
    "Radar chart",
    "bar ranking",
    "distance plots",
    "Distance to ideal/anti-ideal bar chart"
  ],
  "references": [
    {
      "title": "https://en.wikipedia.org/wiki/TOPSIS",
      "url": "https://en.wikipedia.org/wiki/TOPSIS",
      "type": "docs"
    }
  ],
  "related": [
    "numpy",
    "pandas"
  ],
  "last_updated": "2025-08-24"
}